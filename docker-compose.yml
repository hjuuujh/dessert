version: "3"
services:
  mysql:
    image: mysql:8.0.22
    container_name: dessert-mysql
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: dessert
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 3s
      timeout: 20s
    ports:
      - 3306:3306
    volumes:
      - ./db/data:/var/lib/mysql
    networks:
      - dessert-network

  redis:
    image: redis:latest
    container_name: dessert-redis
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
      # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: always
    command: redis-server /usr/local/conf/redis.conf

  config-server:
    build:
      context: ./config-server
    ports:
      - 8888:8888
    container_name: dessert-config-server
    networks:
      - dessert-network

  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - 8761:8761
    container_name: dessert-eureka-server
    networks:
      - dessert-network

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - 8080:8080
    container_name: api-gateway
    depends_on:
      eureka-server:
        condition: service_started
      config-server:
        condition: service_started
#      reservation-api:
#        condition: service_started
#      store-api:
#        condition: service_started
#      member-api:
#        condition: service_started
    environment: # docker-compose.yml에 설정한 환경변수가 기존의 환경변수 덮어씌움
      spring.cloud.config.uri: http://config-server:8888
      spring.config.import: optional:configserver:http://config-server:8888
      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: open-api
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://member-api:8090
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /api/member/signup, /api/member/signin
      spring.cloud.gateway.routes[1].id: member-api
      spring.cloud.gateway.routes[1].uri: http://member-api:8090
      spring.cloud.gateway.routes[1].predicates[0]: Path= /api/member/**
      spring.cloud.gateway.routes[2].id: store-api
      spring.cloud.gateway.routes[2].uri: http://store-api:8091
      spring.cloud.gateway.routes[2].predicates[0]: Path= /api/store/**
      spring.cloud.gateway.routes[3].id: reservation-api
      spring.cloud.gateway.routes[3].uri: http://reservation-api:8092
      spring.cloud.gateway.routes[3].predicates[0]: Path= /api/reservation/**

    networks:
      - dessert-network

#  member-api:
#    build:
#      context: ./member-api
#    ports:
#      - 8090:8090
#    environment:
##      SPRING_DATASOURCE_URL: jdbc:mysql://store-mysql:3306/store?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
##      SPRING_DATASOURCE_USERNAME: "root"
##      SPRING_DATASOURCE_PASSWORD: "1234"
#      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka
#      spring.cloud.config.uri: http://config-server:8888
#      spring.config.import: optional:configserver:http://config-server:8888
#    depends_on:
#      db:
#        condition: service_healthy
#      discovery-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#    container_name: store-member-api
#    networks:
#      - dessert-network
#
#  store-api:
#    build:
#      context: ./store-api
#    ports:
#      - 8091:8091
#    environment:
##      SPRING_DATASOURCE_URL: jdbc:mysql://store-mysql:3306/store?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
##      SPRING_DATASOURCE_USERNAME: "root"
##      SPRING_DATASOURCE_PASSWORD: "1234"
#      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka
#      spring.cloud.config.uri: http://config-server:8888
#      spring.config.import: optional:configserver:http://config-server:8888
#    depends_on:
#      db:
#        condition: service_healthy
#      discovery-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#    container_name: store-store-api
#    networks:
#      - store-network
#
#  reservation-api:
#    build:
#      context: ./reservation-api
#    ports:
#      - 8092:8092
#    environment:
##      SPRING_DATASOURCE_URL: jdbc:mysql://store-mysql:3306/store?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
##      SPRING_DATASOURCE_USERNAME: "root"
##      SPRING_DATASOURCE_PASSWORD: "1234"
#      eureka.client.serviceUrl.defaultZone: http://discovery-server:8761/eureka
#      spring.cloud.config.uri: http://config-server:8888
#      spring.config.import: optional:configserver:http://config-server:8888
#    depends_on:
#      db:
#        condition: service_healthy
#      discovery-server:
#        condition: service_started
#      config-server:
#        condition: service_started
#    container_name: store-reservation-api
#    networks:
#      - dessert-network

networks:
  dessert-network: