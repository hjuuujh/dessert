spring:
  application:
    name: order-api
  profiles:
    active: dev
  cloud:
    config:
      label: master
      profile: dev
      uri: http://localhost:8888
  datasource:
    hikari:
#      connection-timeout: 15000 # 3초 -> 15초로 증가
#      maximum-pool-size: 5
#      max-lifetime: 30000
      batch-datasource:
        jdbc-url: jdbc:mysql://localhost:3306/batch?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
        # url: jdbc:mysql://dessert-db:3306/member?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 1234
      order-datasource:
        jdbc-url: jdbc:mysql://localhost:3306/orders?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
        # url: jdbc:mysql://dessert-db:3306/member?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 1234
      member-datasource:
        jdbc-url: jdbc:mysql://localhost:3306/member?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
        # url: jdbc:mysql://dessert-db:3306/member?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 1234

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

  batch:
    jdbc:
      initialize-schema: always

  config:
    import: optional:configserver:http://localhost:8888

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  eureka: # eureka client 등록
    instance:
      prefer-ip-address: true # 컨테이너 기반 배포면 임의의 호스트이름이 부여되므로 true이용해 ip주소로 등록해 찾도록
    client:
      register-with-eureka: true
      fetch-registry: true
      serviceUrl:
        defaultZone: http://localhost:8761/eureka/

server:
  port: 8092

management:
  endpoints:
    web:
      exposure:
        include: "*"

external-api:
  member:
    url: http://localhost:8090/api/member
  #  member:
  #    url: http://member-api:8090/api/member
  store:
    url: http://localhost:8091/api/store
#  store:
#    url: http://store-api:8091/api/store

